version: '3.3'
services:
    webapi:
        build: '/ic-webapp/api/'
        container_name: webapi
        networks:
            - webapp
        ports:
            - '8080:8080'
        volumes:
            - 'app-data:/opt'
            - '/ic-webapp/*:/opt'   
        env_file:
            - .env_prod
        restart: unless-stopped
        depends_on:
            - 'postgres'
    postgres:
        env_file:
            - .env_prod
        container_name: postgres
        image: 'postgres:13'
        volumes:
            - 'postgres:/var/lib/postgresql/data/pgdata'
        networks:
            - webapp
        ports:
            - '5432:5432'
        restart: unless-stopped

    pgadmin:
        env_file:
            - .env_prod
        container_name: pgadmin_webapp
        image: 'dpage/pgadmin4:latest'
        volumes:
            - 'pgadmin:/var/lib/pgadmin'
            - '/ic-webapp/api/servers.json:/pgadmin4/servers.json'
        networks:
            - webapp
        ports:
            - '5050:80'
        links:
            - 'postgres:pgsql-server'
        restart: unless-stopped
        depends_on:
            - 'postgres'
    odoo:
        env_file:
            - .env_prod
        container_name: odoo_webapp
        image: 'odoo:13'
        volumes:
            - odoo-web-data:/var/lib/odoo
            - ./config:/etc/odoo
            - ./addons:/mnt/extra-addons
        networks:
            - webapp
        ports:
            - '8069:8069'
        restart: always
        depends_on:
            - 'postgres'
networks:
  webapp:
    driver: bridge

volumes:
    app-data:
    postgres:
    pgadmin:
    odoo-web-data: